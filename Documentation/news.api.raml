#%RAML 0.8
title: User service - manages users and user claims
version: 1
/users?filter={filter}&skip={skip}&count={count}:
  get:
    description: Retrieves the list of users from the user store
    queryParameters:
      filter:
        type: string
        description: Text to filter the user name on
      skip:
        type: integer
        description: The number of users to skip
      count:
        type: integer
        description: The number of users to return
  post:
    description: Adds a user to the user store
    body:
      application/json:       
        example: |      
          {
            "username": "user",
            "password": "...",
            "claims": [
              {
                "type": "...",
                "value": "..."
              },
              {
                "type": "...",
                "value": "..."
              }
            ]
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "username": "user"
              }
/users/{username}:
  get:
    description: Gets the specified user from the user store
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "username": "user"
              }
  put:
    description: Updates the specified user in the user store
    body:
      application/json:
        example: |
          {
            "password": "..."
          }
    responses:
      204:
  delete:
    description: Deletes the specified user from the user store
    responses:
      204:
/users/{username}/claims:
  get:
    description: Retrieves the specified user's claims
    responses:
      200:
        body:
          application/json:    
            example: |
              [
                {
                  "type": "...",
                  "value": "..."
                }
              ]
  post:
    description: Adds the claims to the specified user
    body:
      application/json:
        example: |
          [
            {
              "type": "...",
              "value": "..."
            },
            {
              "type": "...",
              "value": "..."
            }
          ]
    responses:
      204:
/users/{username}/claims?types={claimTypes}:
  get:
    description: Gets all claims of the specified type from the specified user
    queryParameters:
      claimTypes:
        type:  string
        description: Comma-separated list of claim types requested
    responses:
      200:
        body:          
          application/json:
            example: |
              [
                {
                  "type": "test",
                  "value": "..."
                },
                {
                  "type": "test",
                  "value": "..."                  
                }
              ]
  put:
    description: Updates the claim for the specified user
  delete:
/users/{username}/authenticate:
  post:
    description: Authenticates the user
    body:
      application/json:
        example: |
          {
            "password": "..."
          }
    responses:
      200:
      400: